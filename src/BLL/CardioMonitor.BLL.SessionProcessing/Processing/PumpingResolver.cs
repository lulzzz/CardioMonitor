using System;
using CardioMonitor.Infrastructure.Logs;

namespace CardioMonitor.SessionProcessing
{
    /// <summary>
    /// Класс для проверки необходимости в начкачке давления в манжете
    /// </summary>
    [Obsolete("Вроде не нужен, но пока оставим")]
    public class PumpingResolver
    {
        private double _previuosPumpingAngle;
        
        /// <summary> 
        /// Угол,используемый для задания диапазона значений текущего угла, для которых
        /// необходимо вызвать накачку
        /// </summary>
        private const double PumpingStartResolutionAgnle = 0.5;

        /// <summary>
        /// Специальная велична, необходимая для корректной работы определения разрешения
        /// </summary>
        /// <remarks>
        /// Без нее все плохо, слишком часто вызывается метод
        /// </remarks>
        private const double ResolutionToleranceAgnle = 6;

        private readonly ILogger _logger;

        public PumpingResolver(ILogger logger)
        {
            if (logger == null) throw new ArgumentNullException(nameof(logger));

            _logger = logger;
        }
        

        /// <summary>
        /// Проверяет, необходимо ли выполнить автонакачку по текущему углу
        /// </summary>
        /// <param name="currentAngle">Текущий угол</param>
        /// <param name="isUpping"></param>
        /// <returns></returns>
        public bool NeedPumping(double currentAngle, bool isUpping)
        {
           
            // У нас на подъем/спуск на 30 градусов нужно 10 минут
            // т.е. каждую минуту движемся на 3 градуса. Значит,учитывая, что
            // автонакачка занимает примерно минуту, то за 3 градуса до контрольной точки
            // нужно подать разрешение о накачке
            if (/*(!isUpping) && */(currentAngle >= 30))             // без таой поправки угол предыдущей накачки при спуске не дает вызывать накачку к 21 и 10,5 градусам
            {
                _previuosPumpingAngle = 30;
            }
            // Для подъема
            if (isUpping && ((currentAngle >= 10.5 - PumpingStartResolutionAgnle && currentAngle <= 10.5)
                || (currentAngle >= 21 - PumpingStartResolutionAgnle && currentAngle <= 21)
                || (currentAngle >= 30 - PumpingStartResolutionAgnle && currentAngle <= 30)))
            {
                //Чтобы метод не вызывался слишком часто
                if (Math.Abs(currentAngle - _previuosPumpingAngle) < ResolutionToleranceAgnle)
                {
                    _logger.Log($"Current angle: {currentAngle}\t" + $"PreviousAngle: {_previuosPumpingAngle}\t" +
                                $"Upping status: {isUpping}\t" + $"Result:        {false}\t");
                    return false;
                }
                _previuosPumpingAngle = currentAngle;
                _logger.Log($"Current angle: {currentAngle}\t" + $"PreviousAngle: {_previuosPumpingAngle}\t" +
                            $"Upping status: {isUpping}\t" + $"Result:        {true}\t");
                return true;
            }
            // Для спуска
            if (!isUpping && ((currentAngle <= 10.5 + PumpingStartResolutionAgnle && currentAngle >= 10.5)
                || (currentAngle <= 21 + PumpingStartResolutionAgnle && currentAngle >= 21)
                || (currentAngle <= 0 + PumpingStartResolutionAgnle && currentAngle >= 0)))
            {
                //Чтобы метод не вызывался слишком часто
                if (Math.Abs(currentAngle - _previuosPumpingAngle) < ResolutionToleranceAgnle)
                {
                    _logger.Log($"Current angle: {currentAngle}\t" + $"PreviousAngle: {_previuosPumpingAngle}\t" +
                                $"Upping status: {isUpping}\t" + $"Result:        {false}\t");
                    return false;
                }
                _previuosPumpingAngle = currentAngle;
                _logger.Log($"Current angle: {currentAngle}\t" + $"PreviousAngle: {_previuosPumpingAngle}\t" +
                            $"Upping status: {isUpping}\t" + $"Result:        {true}\t");
                return true;
            }
            //Для всех остальных случаев
            _logger.Log($"Current angle: {currentAngle}\t" + $"PreviousAngle: {_previuosPumpingAngle}\t" +
                        $"Upping status: {isUpping}\t" + $"Result:        {false}\t");
            return false;
        }
    }
}
